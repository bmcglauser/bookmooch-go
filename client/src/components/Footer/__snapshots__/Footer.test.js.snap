// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Welcome Text should render based on props passed should render with one left button 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="footer-grand-wrapper"
      >
        <div
          class="small-button"
        >
          <a
            href="/profile/"
            style="text-decoration: none;"
          >
            <div
              class="user-button-wrapper"
            >
              <button
                class="user-button"
              />
              <p>
                User Home
              </p>
            </div>
          </a>
        </div>
        <div />
        <div
          class="small-button"
        >
          <div />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="footer-grand-wrapper"
    >
      <div
        class="small-button"
      >
        <a
          href="/profile/"
          style="text-decoration: none;"
        >
          <div
            class="user-button-wrapper"
          >
            <button
              class="user-button"
            />
            <p>
              User Home
            </p>
          </div>
        </a>
      </div>
      <div />
      <div
        class="small-button"
      >
        <div />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Welcome Text should render based on props passed should render with one left button and center button 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="footer-grand-wrapper"
      >
        <div
          class="small-button"
        >
          <a
            href="/profile/"
            style="text-decoration: none;"
          >
            <div
              class="user-button-wrapper"
            >
              <button
                class="user-button"
              />
              <p>
                User Home
              </p>
            </div>
          </a>
        </div>
        <div
          class="circle-add-button-wrapper"
        >
          <a
            href="/findadd"
            style="text-decoration: none;"
          >
            <button
              class="the-button"
            >
              <div
                class="the-circle"
              />
              <div
                class="vertical-bar"
              />
              <div
                class="horizontal-bar"
              />
            </button>
          </a>
          <p
            class="label"
          >
            Add a Book
          </p>
        </div>
        <div
          class="small-button"
        >
          <div />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="footer-grand-wrapper"
    >
      <div
        class="small-button"
      >
        <a
          href="/profile/"
          style="text-decoration: none;"
        >
          <div
            class="user-button-wrapper"
          >
            <button
              class="user-button"
            />
            <p>
              User Home
            </p>
          </div>
        </a>
      </div>
      <div
        class="circle-add-button-wrapper"
      >
        <a
          href="/findadd"
          style="text-decoration: none;"
        >
          <button
            class="the-button"
          >
            <div
              class="the-circle"
            />
            <div
              class="vertical-bar"
            />
            <div
              class="horizontal-bar"
            />
          </button>
        </a>
        <p
          class="label"
        >
          Add a Book
        </p>
      </div>
      <div
        class="small-button"
      >
        <div />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Welcome Text should render based on props passed should render with one right button 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="footer-grand-wrapper"
      >
        <div
          class="small-button"
        >
          <div />
        </div>
        <div />
        <div
          class="small-button"
        >
          <a
            href="/search"
            style="text-decoration: none;"
          >
            <div
              class="search-button-wrapper"
            >
              <button
                class="search-button"
              />
              <p>
                Find a Book
              </p>
            </div>
          </a>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="footer-grand-wrapper"
    >
      <div
        class="small-button"
      >
        <div />
      </div>
      <div />
      <div
        class="small-button"
      >
        <a
          href="/search"
          style="text-decoration: none;"
        >
          <div
            class="search-button-wrapper"
          >
            <button
              class="search-button"
            />
            <p>
              Find a Book
            </p>
          </div>
        </a>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Welcome Text should render based on props passed should render with only center button 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="footer-grand-wrapper"
      >
        <div
          class="small-button"
        >
          <div />
        </div>
        <div
          class="circle-add-button-wrapper"
        >
          <a
            href="/findadd"
            style="text-decoration: none;"
          >
            <button
              class="the-button"
            >
              <div
                class="the-circle"
              />
              <div
                class="vertical-bar"
              />
              <div
                class="horizontal-bar"
              />
            </button>
          </a>
          <p
            class="label"
          >
            Add a Book
          </p>
        </div>
        <div
          class="small-button"
        >
          <div />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="footer-grand-wrapper"
    >
      <div
        class="small-button"
      >
        <div />
      </div>
      <div
        class="circle-add-button-wrapper"
      >
        <a
          href="/findadd"
          style="text-decoration: none;"
        >
          <button
            class="the-button"
          >
            <div
              class="the-circle"
            />
            <div
              class="vertical-bar"
            />
            <div
              class="horizontal-bar"
            />
          </button>
        </a>
        <p
          class="label"
        >
          Add a Book
        </p>
      </div>
      <div
        class="small-button"
      >
        <div />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Welcome Text should render based on props passed should render with two corner buttons 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="footer-grand-wrapper"
      >
        <div
          class="small-button"
        >
          <a
            href="/profile/"
            style="text-decoration: none;"
          >
            <div
              class="user-button-wrapper"
            >
              <button
                class="user-button"
              />
              <p>
                User Home
              </p>
            </div>
          </a>
        </div>
        <div />
        <div
          class="small-button"
        >
          <a
            href="/search"
            style="text-decoration: none;"
          >
            <div
              class="search-button-wrapper"
            >
              <button
                class="search-button"
              />
              <p>
                Find a Book
              </p>
            </div>
          </a>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="footer-grand-wrapper"
    >
      <div
        class="small-button"
      >
        <a
          href="/profile/"
          style="text-decoration: none;"
        >
          <div
            class="user-button-wrapper"
          >
            <button
              class="user-button"
            />
            <p>
              User Home
            </p>
          </div>
        </a>
      </div>
      <div />
      <div
        class="small-button"
      >
        <a
          href="/search"
          style="text-decoration: none;"
        >
          <div
            class="search-button-wrapper"
          >
            <button
              class="search-button"
            />
            <p>
              Find a Book
            </p>
          </div>
        </a>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
